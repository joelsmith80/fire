$mobileMargin: 0.5rem;
$mobileMargin: ($stanPad / 2);
$desktopMargin: ($mobileMargin * 3);
$desktopMargin: ($stanPad / 2);

// selects all items in the last row of a grid, for a grid with a given number of columns
@mixin flatBottom($x){
  > *:nth-child(#{$x}n+1):nth-last-child(-n+#{$x}),
  > *:nth-child(#{$x}n+1):nth-last-child(-n+#{$x}) ~ li {
    margin-bottom: 0;
  }
}

ul.flexgrid {
  margin-top: 0;
  margin-bottom: 0;
}

.flexgrid {
  &.m1-one,
  &.m2-one,
  &.t-one,
  &.d-one,
  &.w-one {
    .card-set-item:last-child {
      margin-bottom: 0;
    }
  }
}

.flexgrid {
  &.m1-two,
  &.m2-two,
  &.m2-three {
    @include responsive(12){
      display: flex;
      flex-wrap: wrap;
      margin-right: -$mobileMargin;
      margin-left: -$mobileMargin;
      > * {
        margin-right: $mobileMargin;
        margin-left: $mobileMargin;
      }
      // fallback for browsers that don't support flexbox
      @supports not(display: flex){
        > * {
          display: inline-block;
          vertical-align: top;
        }
      }
    }
  }
  &.m1-two {
    @include responsive(1){
      > * {
        width: 46%;
        width: calc(50% - #{($mobileMargin * 2)});
      }
      @include flatBottom(2);
    }
  }
  &.m1-three {
    @include responsive(1){
      > * {
        width: 27%;
        width: calc(33.33% - #{($mobileMargin * 2)});
      }
      @include flatBottom(3);
    }
  }
  &.m2-two {
    @include responsive(2){
      > * {
        width: 46%;
        width: calc(50% - #{($mobileMargin * 2)});
      }
      @include flatBottom(2);
    }
  }
  &.m2-three {
    @include responsive(2){
      > * {
        width: 27%;
        width: calc(33.33% - #{($mobileMargin * 2)});
      }
      @include flatBottom(3);
    }
  }
  &.t-two,
  &.t-three,
  &.t-four,
  &.t-five {
    @include responsive(3){
      display: flex;
      flex-wrap: wrap;
      margin-right: -$desktopMargin;
      margin-left: -$desktopMargin;
      > * {
        margin-right: $desktopMargin;
        margin-left: $desktopMargin;
      }
      // fallback for browsers that don't support flexbox
      @supports not(display: flex){
        > * {
          display: inline-block;
          vertical-align: top;
        }
      }
    }
  }
  &.t-two {
    @include responsive(3){
      > * {
        width: 44%;
        width: calc(50% - #{($desktopMargin * 2)});
      }
      @include flatBottom(2);
    }
  }
  &.t-three {
    @include responsive(3){
      > * {
        width: 27%;
        width: calc(33.33% - #{($desktopMargin * 2)});
      }
      @include flatBottom(3);
    }
  }
  &.t-four {
    @include responsive(3){
      > * {
        width: 19%;
        width: calc(25% - #{($desktopMargin * 2)});
      }
      @include flatBottom(4);
    }
  }
  &.t-five {
    @include responsive(3){
      > * {
        width: 14%;
        width: calc(20% - #{($desktopMargin * 2)});
      }
      @include flatBottom(5);
    }
  }
  &.d-two,
  &.d-three,
  &.d-four,
  &.d-five,
  &.d-six {
    @include responsive(4){
      display: flex;
      flex-wrap: wrap;
      margin-right: -$desktopMargin;
      margin-left: -$desktopMargin;
      > * {
        margin-right: $desktopMargin;
        margin-left: $desktopMargin;
      }
      // fallback for browsers that don't support flexbox
      @supports not(display: flex){
        > * {
          display: inline-block;
          vertical-align: top;
        }
      }
    }
  }
  &.d-two {
    @include responsive(4){
      > * {
        width: 44%;
        width: calc(50% - #{($desktopMargin * 2)});
      }
      @include flatBottom(2);
    }
  }
  &.d-three {
    @include responsive(4){
      > * {
        width: 27%;
        width: calc(33.33% - #{($desktopMargin * 2)});
      }
      @include flatBottom(3);
    }
  }
  &.d-four {
    @include responsive(4){
      > * {
        width: 19%;
        width: calc(25% - #{($desktopMargin * 2)});
      }
      @include flatBottom(4);
    }
  }
  &.d-five {
    @include responsive(4){
      > * {
        width: 14%;
        width: calc(20% - #{($desktopMargin * 2)});
      }
      @include flatBottom(5);
    }
  }
  &.d-six {
    @include responsive(4){
      > * {
        width: 12%;
        width: calc(16.667% - #{($desktopMargin * 2)});
      }
      @include flatBottom(6);
    }
  }
  &.w-two,
  &.w-three,
  &.w-four,
  &.w-five,
  &.w-six {
    @include responsive(5){
      display: flex;
      flex-wrap: wrap;
      margin-right: -$desktopMargin;
      margin-left: -$desktopMargin;
      > * {
        margin-right: $desktopMargin;
        margin-left: $desktopMargin;
      }
      // fallback for browsers that don't support flexbox
      @supports not(display: flex){
        > * {
          display: inline-block;
          vertical-align: top;
        }
      }
    }
  }
  &.w-two {
    @include responsive(5){
      > * {
        width: 44%;
        width: calc(50% - #{($desktopMargin * 2)});
      }
      @include flatBottom(2);
    }
  }
  &.w-three {
    @include responsive(5){
      > * {
        width: 27%;
        width: calc(33.33% - #{($desktopMargin * 2)});
      }
      @include flatBottom(3);
    }
  }
  &.w-four {
    @include responsive(5){
      > * {
        width: 19%;
        width: calc(25% - #{($desktopMargin * 2)});
      }
      @include flatBottom(4);
    }
  }
  &.w-five {
    @include responsive(5){
      > * {
        width: 14%;
        width: calc(20% - #{($desktopMargin * 2)});
      }
      @include flatBottom(5);
    }
  }
  &.w-six {
    @include responsive(5){
      > * {
        width: 12%;
        width: calc(16.667% - #{($desktopMargin * 2)});
      }
      @include flatBottom(6);
    }
  }
}

ul.equal {
  display: flex;
  flex-wrap: wrap;
}
